According to the two following functions, every weapon has a similar fusion cost, but magic and different accessories have different costs.

void __thiscall FusionCosts(int this)
{
  int v1; // ebp@0
  int v2; // edx@1
  int v3; // edi@1
  int v4; // esi@1
  char v5; // cl@2
  _BYTE *v6; // eax@2
  int v7; // edx@5
  int v8; // eax@7
  int v9; // esi@9
  int v10; // eax@10
  int v11; // esi@12
  int v12; // eax@13
  int v13; // esi@15
  int v14; // eax@16
  int v15; // esi@18
  char v16; // [sp-1Ch] [bp-784h]@5
  char v17; // [sp-18h] [bp-780h]@5
  int v18; // [sp-14h] [bp-77Ch]@5
  int v19; // [sp-10h] [bp-778h]@5
  int v20; // [sp-Ch] [bp-774h]@5
  int v21; // [sp-8h] [bp-770h]@5
  char *v22; // [sp-4h] [bp-76Ch]@5
  char *v23; // [sp+Ch] [bp-75Ch]@3
  int v25; // [sp+14h] [bp-754h]@8
  CHAR AppName[4]; // [sp+18h] [bp-750h]@1
  int v27; // [sp+1Ch] [bp-74Ch]@1
  int v28; // [sp+20h] [bp-748h]@1
  int v29; // [sp+24h] [bp-744h]@1
  int v30; // [sp+28h] [bp-740h]@1
  int v31; // [sp+2Ch] [bp-73Ch]@1
  int v32; // [sp+30h] [bp-738h]@1
  int v33; // [sp+34h] [bp-734h]@1
  int v34; // [sp+38h] [bp-730h]@1
  int v35; // [sp+3Ch] [bp-72Ch]@1
  int v36; // [sp+40h] [bp-728h]@1
  int v37; // [sp+44h] [bp-724h]@1
  int v38; // [sp+48h] [bp-720h]@1
  int v39; // [sp+4Ch] [bp-71Ch]@1
  int v40; // [sp+50h] [bp-718h]@1
  int v41; // [sp+54h] [bp-714h]@1
  int v42; // [sp+58h] [bp-710h]@1
  int v43; // [sp+5Ch] [bp-70Ch]@1
  int v44; // [sp+60h] [bp-708h]@1
  int v45; // [sp+64h] [bp-704h]@1
  int v46; // [sp+68h] [bp-700h]@1
  int v47; // [sp+6Ch] [bp-6FCh]@1
  int v48; // [sp+70h] [bp-6F8h]@1
  int v49; // [sp+74h] [bp-6F4h]@1
  int v50; // [sp+78h] [bp-6F0h]@1
  int v51; // [sp+7Ch] [bp-6ECh]@1
  int v52; // [sp+80h] [bp-6E8h]@1
  int v53; // [sp+84h] [bp-6E4h]@1
  int v54; // [sp+88h] [bp-6E0h]@1
  int v55; // [sp+8Ch] [bp-6DCh]@1
  int v56; // [sp+90h] [bp-6D8h]@1
  int v57; // [sp+94h] [bp-6D4h]@1
  int v58; // [sp+98h] [bp-6D0h]@1
  int v59; // [sp+9Ch] [bp-6CCh]@1
  int v60; // [sp+A0h] [bp-6C8h]@1
  int v61; // [sp+A4h] [bp-6C4h]@1
  int v62; // [sp+A8h] [bp-6C0h]@1
  int v63; // [sp+ACh] [bp-6BCh]@1
  int v64; // [sp+B0h] [bp-6B8h]@1
  int v65; // [sp+B4h] [bp-6B4h]@1
  int v66; // [sp+B8h] [bp-6B0h]@1
  int v67; // [sp+BCh] [bp-6ACh]@1
  int v68; // [sp+C0h] [bp-6A8h]@1
  int v69; // [sp+C4h] [bp-6A4h]@1
  int v70; // [sp+C8h] [bp-6A0h]@1
  int v71; // [sp+CCh] [bp-69Ch]@1
  int v72; // [sp+D0h] [bp-698h]@1
  int v73; // [sp+D4h] [bp-694h]@1
  int v74; // [sp+D8h] [bp-690h]@1
  int v75; // [sp+DCh] [bp-68Ch]@1
  int v76; // [sp+E0h] [bp-688h]@1
  int v77; // [sp+E4h] [bp-684h]@1
  int v78; // [sp+E8h] [bp-680h]@1
  int v79; // [sp+ECh] [bp-67Ch]@1
  __int16 v80; // [sp+119h] [bp-64Fh]@7
  char v81; // [sp+11Bh] [bp-64Dh]@7
  char v82; // [sp+120h] [bp-648h]@8
  char v83; // [sp+121h] [bp-647h]@8
  __int16 v84; // [sp+221h] [bp-547h]@8
  char v85; // [sp+223h] [bp-545h]@8
  CHAR KeyName; // [sp+228h] [bp-540h]@7
  char v87; // [sp+229h] [bp-53Fh]@7
  __int16 v88; // [sp+329h] [bp-43Fh]@7
  char v89; // [sp+32Bh] [bp-43Dh]@7
  const char *v90; // [sp+330h] [bp-438h]@5
  char v91; // [sp+334h] [bp-434h]@5
  LPVOID lpMem; // [sp+338h] [bp-430h]@5
  int v93; // [sp+348h] [bp-420h]@5
  unsigned int v94; // [sp+34Ch] [bp-41Ch]@5
  char v95; // [sp+350h] [bp-418h]@5
  int v96; // [sp+754h] [bp-14h]@1
  int v97; // [sp+764h] [bp-4h]@5

  v32 = 800;
  v39 = 800;
  v27 = 4;
  v28 = 7;
  v34 = 4;
  v35 = 7;
  v57 = 800;
  v65 = 800;
  v72 = 800;
  v52 = 4;
  v60 = 4;
  v67 = 4;
  v96 = -1153374642;
  *AppName = 2;
  v29 = 25;
  v30 = 50;
  v31 = 400;
  v33 = 1600;
  v36 = 13;
  v37 = 50;
  v38 = 100;
  v40 = 1600;
  v41 = 3200;
  v42 = 1;
  v43 = 1;
  v44 = 2;
  v45 = 7;
  v46 = 13;
  v47 = 100;
  v48 = 200;
  v49 = 400;
  v50 = 1;
  v51 = 2;
  v53 = 13;
  v54 = 25;
  v55 = 200;
  v56 = 400;
  v58 = 1;
  v59 = 2;
  v61 = 13;
  v62 = 25;
  v63 = 200;
  v64 = 400;
  v66 = 2;
  v68 = 7;
  v69 = 25;
  v70 = 50;
  v71 = 400;
  v73 = 1600;
  qmemcpy((this + 196), AppName, 0xC0u);
  *AppName = 1;
  v27 = 1;
  v28 = 2;
  v29 = 4;
  v30 = 13;
  v31 = 25;
  v32 = 200;
  v33 = 400;
  v34 = 800;
  v35 = 2;
  v36 = 2;
  v37 = 4;
  v38 = 7;
  v39 = 25;
  v49 = 7;
  v48 = 4;
  v57 = 7;
  v66 = 7;
  v74 = 4;
  v52 = 200;
  v60 = 200;
  v67 = 13;
  v69 = 200;
  v75 = 13;
  v77 = 200;
  v41 = 400;
  v40 = 50;
  v42 = 800;
  v43 = 1600;
  v44 = 1;
  v45 = 1;
  v46 = 1;
  v47 = 1;
  v50 = 50;
  v51 = 100;
  v53 = 1;
  v54 = 1;
  v55 = 1;
  v56 = 2;
  v61 = 400;
  v65 = 2;
  v70 = 400;
  v73 = 2;
  v78 = 400;
  v58 = 13;
  v59 = 100;
  v62 = 1;
  v63 = 1;
  v64 = 1;
  v68 = 100;
  v71 = 1;
  v72 = 1;
  v76 = 25;
  v79 = 800;
  qmemcpy((this + 604), AppName, 0xD8u);
  v2 = 600;
  *AppName = 600;
  v27 = 1250;
  v28 = 2500;
  v29 = 10000;
  v30 = 20000;
  v31 = 160000;
  v32 = 320000;
  v33 = 640000;
  v34 = 1250;
  v35 = 2500;
  v36 = 5000;
  v37 = 20000;
  v38 = 40000;
  v39 = 320000;
  v40 = 640000;
  v41 = 1280000;
  v42 = 150;
  v43 = 300;
  v44 = 600;
  v45 = 2500;
  v46 = 5000;
  v47 = 40000;
  v48 = 80000;
  v49 = 160000;
  v50 = 300;
  v51 = 600;
  v52 = 1250;
  v53 = 5000;
  v54 = 10000;
  v55 = 80000;
  v68 = 2500;
  v56 = 160000;
  v57 = 320000;
  v64 = 160000;
  v65 = 320000;
  v71 = 160000;
  v72 = 320000;
  v58 = 300;
  v59 = 600;
  v60 = 1250;
  v61 = 5000;
  v62 = 10000;
  v63 = 80000;
  v66 = 600;
  v67 = 1250;
  v69 = 10000;
  v70 = 20000;
  v73 = 640000;
  qmemcpy((this + 4), AppName, 0xC0u);
  v30 = 5000;
  v38 = 5000;
  v58 = 5000;
  v67 = 5000;
  v75 = 5000;
  *AppName = 300;
  v27 = 600;
  v28 = 1250;
  v29 = 2500;
  v31 = 10000;
  v32 = 80000;
  v33 = 160000;
  v34 = 320000;
  v35 = 600;
  v36 = 1250;
  v37 = 2500;
  v39 = 10000;
  v40 = 20000;
  v41 = 160000;
  v42 = 320000;
  v43 = 640000;
  v44 = 75;
  v45 = 150;
  v46 = 300;
  v47 = 600;
  v48 = 1250;
  v49 = 2500;
  v50 = 20000;
  v51 = 40000;
  v52 = 80000;
  v53 = 150;
  v54 = 300;
  v55 = 600;
  v56 = 1250;
  v57 = 2500;
  v59 = 40000;
  v60 = 80000;
  v61 = 160000;
  v62 = 150;
  v63 = 300;
  v64 = 600;
  v65 = 1250;
  v66 = 2500;
  v68 = 40000;
  v69 = 80000;
  v70 = 160000;
  v71 = 300;
  v72 = 600;
  v73 = 1250;
  v74 = 2500;
  v76 = 10000;
  v77 = 80000;
  v78 = 160000;
  v79 = 320000;
  qmemcpy((this + 388), AppName, 0xD8u);
  v3 = ::v6;
  v4 = 0;
  if ( ::v6 > 0 )
  {
    v2 = ::v4;
    v5 = ::v8;
    v6 = (::v4 + 9);
    do
    {
      LOBYTE(v2) = v5 ^ ~*v6;
      LOBYTE((&v23)[v4++]) = v2;
      ++v6;
    }
    while ( v4 < v3 );
  }
  if ( v23 != 4015 )
  {
    v90 = "@p@";
    v94 = 15;
    v93 = 0;
    LOBYTE(lpMem) = 0;
    v97 = 0;
    sub_405500(&v91, v2, &Default, 0);
    v95 = 0;
    v23 = &v16;
    v22 = 15;
    v21 = 0;
    v97 = 1;
    v17 = 0;
    sub_405500(&v16, v7, "config\\FInfo.ini", 0x10u);
    if ( sub_734570(v16, *&v17, v18, v19, v20, v21, v22) )
    {
      memset(&AppName[1], 0, 0x100u);
      v80 = 0;
      v81 = 0;
      KeyName = 0;
      memset(&v87, 0, 0x100u);
      v88 = 0;
      *AppName = 1146241347;
      v89 = 0;
      BYTE2(v28) = 0;
      LOWORD(v28) = 19525;
      v8 = 0;
      v27 = 1447382111;
      v23 = (this + 196);
      do
      {
        v22 = (v8 + 1);
        v25 = v8 + 1;
        wsprintfA(&KeyName, "CARD%d", v8 + 1);
        v82 = 0;
        memset(&v83, 0, 0x100u);
        v84 = 0;
        v85 = 0;
        strcpy(&v82, sub_7344F0(&v90, AppName, &KeyName, &Default));
        if ( !memcmp(&v82, &Default, 1u) )
        {
          v22 = "FusionObject::Initialize GetStringLoad Failed 1";
          goto LABEL_28;
        }
        v9 = v23;
        sub_406CB0(&v82, v23, 8);
        v8 = v25;
        v23 = (v9 + 32);
      }
      while ( v25 < 6 );
      *AppName = 1146241347;
      v27 = 1229673311;
      BYTE2(v28) = 0;
      v10 = 0;
      LOWORD(v28) = 19532;
      v23 = (this + 604);
      do
      {
        v22 = (v10 + 1);
        v25 = v10 + 1;
        wsprintfA(&KeyName, "CARD%d", v10 + 1);
        v82 = 0;
        memset(&v83, 0, 0x100u);
        v84 = 0;
        v85 = 0;
        strcpy(&v82, sub_7344F0(&v90, AppName, &KeyName, &Default));
        if ( !memcmp(&v82, &Default, 1u) )
        {
          v22 = "FusionObject::Initialize GetStringLoad Failed 2";
          goto LABEL_28;
        }
        v11 = v23;
        sub_406CB0(&v82, v23, 9);
        v10 = v25;
        v23 = (v11 + 36);
      }
      while ( v25 < 6 );
      *AppName = 1162104643;
      v27 = 1447382111;
      BYTE2(v28) = 0;
      v12 = 0;
      LOWORD(v28) = 19525;
      v23 = (this + 4);
      do
      {
        v22 = (v12 + 1);
        v25 = v12 + 1;
        wsprintfA(&KeyName, "CARD%d", v12 + 1);
        v82 = 0;
        memset(&v83, 0, 0x100u);
        v84 = 0;
        v85 = 0;
        strcpy(&v82, sub_7344F0(&v90, AppName, &KeyName, &Default));
        if ( !memcmp(&v82, &Default, 1u) )
        {
          v22 = "FusionObject::Initialize GetStringLoad Failed 3";
          goto LABEL_28;
        }
        v13 = v23;
        sub_406CB0(&v82, v23, 8);
        v12 = v25;
        v23 = (v13 + 32);
      }
      while ( v25 < 6 );
      *AppName = 1162104643;
      v27 = 1229673311;
      BYTE2(v28) = 0;
      v14 = 0;
      LOWORD(v28) = 19532;
      v23 = (this + 388);
      while ( 1 )
      {
        v22 = (v14 + 1);
        v25 = v14 + 1;
        wsprintfA(&KeyName, "CARD%d", v14 + 1);
        v82 = 0;
        memset(&v83, 0, 0x100u);
        v84 = 0;
        v85 = 0;
        strcpy(&v82, sub_7344F0(&v90, AppName, &KeyName, &Default));
        if ( !memcmp(&v82, &Default, 1u) )
          break;
        v15 = v23;
        sub_406CB0(&v82, v23, 9);
        v14 = v25;
        v23 = (v15 + 36);
        if ( v25 >= 6 )
        {
          v90 = "@p@";
          goto LABEL_20;
        }
      }
      v22 = "FusionObject::Initialize GetStringLoad Failed 4";
LABEL_28:
      CLog::PrintTimeAndLog(LOG, 0, v22);
      v90 = "@p@";
      if ( v94 >= 0x10 )
      {
        v22 = lpMem;
        goto LABEL_22;
      }
    }
    else
    {
      v90 = "@p@";
LABEL_20:
      if ( v94 >= 0x10 )
      {
        v22 = lpMem;
LABEL_22:
        sub_73E3A8(v22);
        goto LABEL_23;
      }
    }
  }
LABEL_23:
  sub_73EB68(v96, v1);
}










And:
char *__thiscall sub_406E60(_DWORD *this, signed int level, signed int itemID, int levelFusionOrSkillFusion)
{
  int v4; // edx@4
  char *result; // eax@5

  if ( itemID / 100 % 10 == 1 )
  {
    v4 = 0;
  }
  else if ( itemID / 100 % 10 == 2 )
  {
    v4 = itemID % 10 + 1;
    if ( v4 < 0 || v4 >= 6 )
      goto LABEL_5;
  }
  else
  {
    if ( itemID / 100 % 10 != 3 )
    {
      v4 = 100;
LABEL_5:
      CLog::PrintTimeAndLog(LOG, 0, "FusionObject::GetFusionWhiteNeed strange type : %d", v4);
      return &loc_98967D + 3;
    }
    v4 = 1;
  }
  result = &loc_98967D + 3;
  switch ( levelFusionOrSkillFusion )
  {
    case 1:                                     // level fusion
      if ( level < 1 || level >= 9 )
        result = this[8 * (v4 + 7)];
      else
        result = this[level + 8 * v4 + 48];
      break;
    case 2:                                     // skill fusion
      if ( level < 1 || level >= 10 )
        result = this[9 * v4 + 159];
      else
        result = *(&this[8 * v4 + 150] + v4 + level);
      break;
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
      result = 0;
      break;
    default:
      return result;
  }
  return result;
}
